// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/service/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	errors "github.com/kumareswaramoorthi/dns/api/errors"
	models "github.com/kumareswaramoorthi/dns/api/models"
)

// MockLocationService is a mock of LocationService interface.
type MockLocationService struct {
	ctrl     *gomock.Controller
	recorder *MockLocationServiceMockRecorder
}

// MockLocationServiceMockRecorder is the mock recorder for MockLocationService.
type MockLocationServiceMockRecorder struct {
	mock *MockLocationService
}

// NewMockLocationService creates a new mock instance.
func NewMockLocationService(ctrl *gomock.Controller) *MockLocationService {
	mock := &MockLocationService{ctrl: ctrl}
	mock.recorder = &MockLocationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationService) EXPECT() *MockLocationServiceMockRecorder {
	return m.recorder
}

// GetLocation mocks base method.
func (m *MockLocationService) GetLocation(c *gin.Context, coordinates models.Coordinates) (*models.Location, *errors.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocation", c, coordinates)
	ret0, _ := ret[0].(*models.Location)
	ret1, _ := ret[1].(*errors.ErrorResponse)
	return ret0, ret1
}

// GetLocation indicates an expected call of GetLocation.
func (mr *MockLocationServiceMockRecorder) GetLocation(c, coordinates interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocation", reflect.TypeOf((*MockLocationService)(nil).GetLocation), c, coordinates)
}
